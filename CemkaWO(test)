#include "stdafx.h"
#include <iostream>
using namespace std;
//Структура дерева
struct Derevo
{
	Derevo *l, *r; //создание веток дерева
	int a; //данные которые будут вводится 
};

// Функция добавление ветки в дерево
void add(int a, Derevo *&MyTree) //Функция добавления звена в дерево
{
	if (NULL == MyTree)  //Если дерево = 0, используем его звено
	{
		MyTree = new Derevo; //Выделение памяти под звено дерева
		MyTree->a = a; //Заносим число в звено
		MyTree->l = MyTree->r = NULL; //Создаём подзвено равное 0, для избежания ошибки перехода
	}

	if (a<MyTree->a)   //Если введённенное число меньше чем предыдущее программа перейдёт к левой ветви
	{
		if (MyTree->l != NULL) add(a, MyTree->l); //При помощи рекурсии помещаем число в свободноё звено
		else // Если же число входит в звено создаём новый элемент подзвена
		{
			MyTree->l = new Derevo;  
			MyTree->l->l = MyTree->l->r = NULL; //У левого подзвена будут свои левое и правое подзвенья, заполняем их 0
			MyTree->l->a = a; //Число заносится в левое подзвено.
		}
	}

	if (a>MyTree->a)   //Если введёное число больше чем предыдущее оно уйдёт в правую ветвь.
	{
		if (MyTree->r != NULL) add(a, MyTree->r); //При помощи рекурсии помещаем число в свободноё звено
		else // Если же число входит в звено создаём новый элемент подзвена
		{
			MyTree->r = new Derevo;  
			MyTree->r->l = MyTree->r->r = NULL; //У правого подзвена будут свои левое и правое подзвенья, заполняем их 0
			MyTree->r->a = a; //Число заносится в правое подзвено.
		}
	}
}

//Обход в прямом порядке. (Алгоритм A,B,C)
void Show(Derevo *&tree)
{
	if (NULL == tree)    return;    //Если дерева нет, ничего не произойдёт

	cout << tree->a << endl; //Вывели узлы
	Show(tree->l); //Просмотр левого поддерева 
	Show(tree->r); //Просмотр правого поддерева  
}

int main()
{
	int a; //Ввведёные числа
	Derevo *MyTree = NULL; //Указатель на нашу структуру. Инициализируем во избежание ошибок

	for (int i = 0; i<5; i++) //В дереве будет 5 узлов
	{
		cout << " Uzel raven = "; cin >> a; //Введение данных
		add(a, MyTree); //добавление числа в дерево
	}

	Show(MyTree); //Обход дерева в ленейном порядке
}
